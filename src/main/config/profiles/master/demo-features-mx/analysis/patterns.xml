<?xml version="1.0" encoding="UTF-8"?>

<profile name="Demo-features-mx" version="${project.version}">


		<!-- 
			Pattern rule appliance by priority :
			1 - stack_size_interest (1003)
			2 - exclude_thread_name (1002)
			3 - exclude (1001)
			4 - function  (6)
			5 - function_discovery  (5)
			6 - executor  (4)
			7 - executor_thread_name (3)
			8 - operation (2)
			9 - operation_discovery (1)
			Exclude, function, operation and executor patterns priorities can be overriden by pattern attribute.
	 	-->
		<patterns>
			<!-- Discovery functions are loaded only if discovery mode is enabled (cf. discovery_mode) -->
			<discovery_functions>
				<!-- pattern is a list of keywords, comma separated. Each keyword will issue one discovery rule -->
				<!-- pattern_regex is optional. Focus can be : method, class, both -->
				<discovery_function pattern="${JEYZER_ANALYZER_DISCOVERY_FUNCTIONS_1}" focus="both"/>
				<discovery_function pattern="${JEYZER_ANALYZER_DISCOVERY_FUNCTIONS_2}" focus="both"/>
				<discovery_function pattern="${JEYZER_ANALYZER_DISCOVERY_FUNCTIONS_3}" focus="both"/>
				<discovery_function pattern="${JEYZER_ANALYZER_DISCOVERY_FUNCTIONS_4}" focus="both"/>
				<discovery_function pattern="${JEYZER_ANALYZER_DISCOVERY_FUNCTIONS_5}" focus="both"/>
			</discovery_functions>
			<!-- In pattern attribute, use semicolon separator to declare multiple line patterns -->
			<functions>
				<!-- Features demo -->
				<function pattern="features.tasks.PingPongPlayer.doPing"  name="Plays ping (blue)"/>
				<function pattern="features.tasks.PingPongPlayer.doPong"  name="Plays pong (green)"/>
				
				<function pattern="features.mx.jeyzer.LongTennisPlayer.longRunningTask"  name="Long running tennis player"/>
				<function pattern="features.mx.jeyzer.LongTennisPlayer.runLeft"  name="Run left"/>
				<function pattern="features.mx.jeyzer.LongTennisPlayer.runRight"  name="Run right"/>
				<function pattern="features.mx.jeyzer.LongTennisPlayer.runMiddle"  name="Run middle"/>

				<!--
				<function pattern="features.mx.generic.volley.VolleyBallPlayer.set"  name="Volley set"/>
				<function pattern="features.mx.generic.volley.VolleyBallPlayer.serve"  name="Volley serve"/>
				<function pattern="features.mx.generic.volley.VolleyBallPlayer.pass"  name="Volley pass"/>
				<function pattern="features.mx.generic.volley.VolleyBallPlayer.attack"  name="Volley attack"/>
				-->
				
				<function pattern="features.tasks.FrozenCode.frozenCode"  name="Frozen code section : stacks are identical" />
				
				<function pattern="features.tasks.MemoryExhaustingTask.exhaustMemory"  name="Out Of Memory thread" />
				<function pattern="features.tasks.MemoryConsumingTask.consumeMemory"  name="Memory consuming thread" />
				<function pattern="features.tasks.CPUConsumingTask.consumeCPU"  name="CPU consuming thread" />
				
				<function pattern="features.tasks.DysfunctionalCodeSequence.dysfunctionalCode2;DysfunctionalCodeSequence.dysfunctionalCode1" name="Dysfunctional code sequence" />
				
				<function pattern="features.tasks.HiatusStart.hiatusStart"  name="Hiatus detected right after this cell : threads dumps were not generated" />
				<function pattern="features.tasks.HiatusEnd.hiatusEnd"  name="Hiatus detected right before this cell" />
				
				<function pattern="features.tasks.LockedThreads.executedLockedAction"  name="Thread owning the synchronized lock section" priority="900" />
				<function pattern="features.tasks.LockedThreads.executedActionLevel2"  name="Thread waiting for the synchronized lock to be released" />
				<function pattern="features.tasks.Deadlock.accessSharedResources"  name="Thread in deadlock" />
				<function pattern="features.tasks.Deadlock.waitBeforeShutdown"  name="Waiting before ExecutorService forceShutdown" />
			</functions>
			<discovery_operations>
				<!-- pattern is a list of keywords, comma separated. Each keyword will issue one discovery rule -->
				<!-- pattern_regex is optional. Focus can be : method, class, both -->
				<discovery_operation pattern="SharedResources" pattern_regex="org\.rwn\.jeyzer.*" focus="method"/>
			</discovery_operations>
			<operations>
				<!-- Operation patterns apply for the first 20 lines of the thread dump                	 -->
				<!-- Exception : patterns ending with '.' apply for the first 2 lines of the thread dump -->

				<!-- Features demo -->
				<operation pattern="features.tasks.MemoryConsumingTask.consumeMemory"  name="Memory creation : fill list with random long numbers"/>
				<operation pattern="features.tasks.CPUConsumingTask.consumeCPU"  name="CPU creation : do mathematical operations"/>
				<operation pattern="features.tasks.LockedThreads.executedActionLevel2"  name="Method action level2 is synchronized"/>
				<operation pattern="features.tasks.Deadlock.accessSharedResources"  name="Access to already locked resource" />
				
				<operation pattern="features.mx.jeyzer.LongTennisPlayer.forehandShot"  name="Forehand shot" />
				<operation pattern="features.mx.jeyzer.LongTennisPlayer.gripShot"  name="Grip shot" />
				<operation pattern="features.mx.jeyzer.LongTennisPlayer.backhandShot"  name="Backhand shot" />
				<operation pattern="features.mx.jeyzer.LongTennisPlayer.serveShot"  name="Serve shot" />
			</operations>
			<executors>
				<!-- Executor patterns must be available within the 20 first lines of the thread dump -->
				<!-- Features demo -->
				<executor pattern="features.FeatureRunnable.run" name="Demo thread"/>
				<executor pattern="LongTennisPlayer$TennisRunnable.run" name="MX Demo thread"/>
				<executor pattern="features.tasks.LockedThreads$1.run" name="Lock feature thread"/>
				<executor pattern="features.tasks.Deadlock$1.run" name="Deadlock feature thread"/>
			</executors>
			<executor_thread_names>
				<!-- Executor pattern based on the thread name. Regular expression recommended -->
				<!--executor_thread_name pattern="thread pattern" name="Thread type name"/-->
				<!--executor_thread_name pattern_regex="regex" name="Thread type name"/-->
			</executor_thread_names>
			<excludes>
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<exclude pattern="ThreadPoolExecutor.getTask" name="RMI Scheduler"/>
				<exclude pattern="Finalizer$FinalizerThread.run" name="Finalizer"/>
				<exclude pattern="features.FeatureRunnable.waitForTermination" name="Inactive demo thread"/>
				<exclude pattern="features.FeatureDemo.main" name="Main"/>
				<exclude pattern="features.tasks.LockedThreads.lockThreads" name="Lock setup thread"/>
			</excludes>
			<exclude_thread_names>
				<!-- Exclude stack based on thread name. Regular expression recommended -->
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<exclude_thread_name pattern_regex="RMI TCP.*" name="RMI thread"/>
				<exclude_thread_name pattern="JMX server connection timeout" name="RMI thread"/>
				<exclude_thread_name pattern="Reference Handler" name="Reference Handler"/>
			</exclude_thread_names>
		</patterns>

</profile>
